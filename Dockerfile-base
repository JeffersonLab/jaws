ARG BUILD_IMAGE=python:3.9-alpine3.18
ARG VIRTUAL_ENV=/opt/venv
ARG LIBRD_VER=2.2.0

################## Stage 0
FROM ${BUILD_IMAGE} as builder
ARG CUSTOM_CRT_URL=http://pki.jlab.org/JLabCA.crt
ARG LIBRD_VER
ARG VIRTUAL_ENV
ARG BUILD_DEPS="gcc linux-headers libc-dev bash make g++ musl-dev zlib-dev openssl zstd-dev pkgconfig libc-dev"
ARG RUN_DEPS="shadow curl git bash zstd-libs"
USER root
WORKDIR /
COPY . /app
RUN sed -i 's/providers = provider_sect/providers = provider_sect\n\
ssl_conf = ssl_sect\n\
\n\
[ssl_sect]\n\
system_default = system_default_sect\n\
\n\
[system_default_sect]\n\
Options = UnsafeLegacyRenegotiation/' /etc/ssl/openssl.cnf
RUN if [ -z "${CUSTOM_CRT_URL}" ] ; then echo "No custom cert needed"; else \
       wget -O /usr/local/share/ca-certificates/customcert.crt $CUSTOM_CRT_URL \
       && update-ca-certificates \
    ; fi \
    && apk add $RUN_DEPS
RUN apk add --no-cache --virtual .make-deps $BUILD_DEPS \
    && wget https://github.com/confluentinc/librdkafka/archive/refs/tags/v${LIBRD_VER}.tar.gz \
    && tar -xvf v${LIBRD_VER}.tar.gz  \
    && cd librdkafka-${LIBRD_VER}  \
    && ./configure --prefix /usr  \
    && make  \
    && make install  \
    && pip install --upgrade pip \
    && cd /app \
    && pip install -e .[dev] \
    && cd /librdkafka-${LIBRD_VER} \
    && make clean  \
    && cd / \
    && rm -rf librdkafka-${LIBRD_VER}  \
    && rm -rf v${LIBRD_VER}.tar.gz \
    && apk del .make-deps \
    && usermod -d /tmp guest
RUN python -m venv $VIRTUAL_ENV
ENV TZ=UTC
ENV PATH="$VIRTUAL_ENV/bin:$PATH"
ENV PS1="\W \$ "

---
version: '3.8'

services:
  zookeeper:
    image: debezium/zookeeper:1.5.0.Final
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: debezium/kafka:1.5.0.Final
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_HOME: "/kafka"
      BOOTSTRAP_SERVER: "kafka:9092"
      ZOOKEEPER_CONNECT: 'zookeeper:2181'

  registry:
    image: confluentinc/cp-schema-registry:6.0.2
    hostname: registry
    container_name: registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: registry

  softioc:
    image: slominskir/softioc:1.1.0
    tty: true
    stdin_open: true
    hostname: softioc
    container_name: softioc
    ports:
      - "5064:5064/tcp"
      - "5065:5065/tcp"
      - "5064:5064/udp"
      - "5065:5065/udp"
    volumes:
      - ../softioc-db:/db

  epics2kafka:
    image: slominskir/jaws-epics2kafka:2.0.0
    hostname: epics2kafka
    container_name: epics2kafka
    ports:
      - 8083:8083
    environment:
      BOOTSTRAP_SERVERS: "kafka:9092"
      CONFIG_STORAGE_TOPIC: connect-configs
      OFFSET_STORAGE_TOPIC: connect-offsets
      STATUS_STORAGE_TOPIC: connect-status
    volumes:
      - ../connect-config:/config

  registrations2epics:
    image: slominskir/registrations2epics:2.0.0
    hostname: registrations2epics
    container_name: registrations2epics
    depends_on:
      - zookeeper
      - kafka
      - registry
      - jaws
    environment:
      BOOTSTRAP_SERVERS: "kafka:9092"
      SCHEMA_REGISTRY: "http://registry:8081"

  jaws:
    image: slominskir/jaws:2.7.1
    tty: true
    stdin_open: true
    hostname: jaws
    container_name: jaws
    depends_on:
      - zookeeper
      - kafka
      - registry
    environment:
      BOOTSTRAP_SERVERS: "kafka:9092"
      SCHEMA_REGISTRY: "http://registry:8081"
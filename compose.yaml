services:
  kafka:
    image: bitnami/kafka:3.5.0
    hostname: kafka
    container_name: kafka
    healthcheck:
      test: kafka-topics.sh --bootstrap-server kafka:9092 --list
      start_period: 30s
      start_interval: 5s
      #      interval: 30s      # waiting for https://github.com/docker/compose/issues/10830
      interval: 5s
      timeout: 10s
      retries: 5
    ports:
      - "9094:9094"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=Cl1akjnHRoG9df2FiSicNg
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LOG_CLEANER_MIN_CLEANABLE_RATIO=0.1
      - KAFKA_CFG_LOG_CLEANER_MAX_COMPACTION_LAG_MS=600000
      - KAFKA_CFG_LOG_CLEANER_MIN_COMPACTION_LAG_MS=300000
      - KAFKA_CFG_LOG_ROLL_MS=300000
      - KAFKA_CFG_LOG_MESSAGE_TIMESTAMP_TYPE=LogAppendTime

  registry:
    image: bitnami/schema-registry:7.4
    hostname: registry
    container_name: registry
    healthcheck:
      test: schema-registry-run-class io.confluent.kafka.schemaregistry.tools.SchemaRegistryPerformance http://localhost:8081 healthcheck 1 1 JSON
      start_period: 30s
      start_interval: 5s
      #      interval: 30s      # waiting for https://github.com/docker/compose/issues/10830
      interval: 5s
      timeout: 10s
      retries: 5
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - 8081:8081
    environment:
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
      - SCHEMA_REGISTRY_KAFKA_BROKERS=PLAINTEXT://kafka:9092

  jaws:
    image: jeffersonlab/jaws-libp:4.8.0
    tty: true
    stdin_open: true
    hostname: jaws
    container_name: jaws
    healthcheck:
      test: test $(list_schemas | wc -l) -gt 20
      start_period: 30s
      start_interval: 5s
      #      interval: 30s      # waiting for https://github.com/docker/compose/issues/10830
      interval: 5s
      timeout: 10s
      retries: 5
    depends_on:
      registry:
        condition: service_healthy
    environment:
      - TZ=America/New_York
      - BOOTSTRAP_SERVERS=kafka:9092
      - SCHEMA_REGISTRY=http://registry:8081
      - LOGLEVEL=INFO
      - ALARM_LOCATIONS=https://raw.githubusercontent.com/JeffersonLab/alarms/main/locations
      - ALARM_CATEGORIES=https://raw.githubusercontent.com/JeffersonLab/alarms/main/categories
      - ALARM_CLASSES=https://raw.githubusercontent.com/JeffersonLab/alarms/main/classes
      - ALARM_INSTANCES=https://raw.githubusercontent.com/JeffersonLab/alarms/main/instances/box
      - ALARM_OVERRIDES=https://raw.githubusercontent.com/JeffersonLab/alarms/main/overrides

  effective:
    image: jeffersonlab/jaws-effective-processor:4.4.0
    hostname: effective
    container_name: effective
    healthcheck:
      test: test $(ps | grep jaws | wc -l) -gt 1
      start_period: 30s
      start_interval: 5s
      #      interval: 30s      # waiting for https://github.com/docker/compose/issues/10830
      interval: 5s
      timeout: 10s
      retries: 5
    depends_on:
      jaws:
        condition: service_healthy
    environment:
      BOOTSTRAP_SERVERS: "kafka:9092"
      SCHEMA_REGISTRY: "http://registry:8081"
---
version: '2'

services:
  softioc:
    image: slominskir/softioc:1.1.0
    tty: true
    stdin_open: true
    hostname: softioc
    container_name: softioc
    ports:
      - "5064:5064/tcp"
      - "5065:5065/tcp"
      - "5064:5064/udp"
      - "5065:5065/udp"
    volumes:
      - ./examples/softioc-db:/db

  zookeeper:
    image: debezium/zookeeper:1.3
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: debezium/kafka:1.3
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CREATE_TOPICS: 'alarms:1:1:compact,active-alarms:1:1:compact,shelved-alarms:1:1:compact'
    volumes:
      - ./examples/kafka-scripts:/scripts

  registry:
    image: confluentinc/cp-schema-registry:5.5.0
    hostname: registry
    container_name: registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: registry

  connect:
    image: slominskir/epics2kafka:0.2.0
    hostname: connect
    container_name: connect
    depends_on:
      - zookeeper
      - kafka
      - softioc
    ports:
      - 8083:8083
    environment:
      BOOTSTRAP_SERVERS: "kafka:9092"
      CONFIG_STORAGE_TOPIC: connect-configs
      OFFSET_STORAGE_TOPIC: connect-offsets
      STATUS_STORAGE_TOPIC: connect-status
      MONITOR_CHANNELS: "hello:hello:VALUE ALARM"
    volumes:
      - ./examples/connect-config:/config

  client:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - CUSTOM_CRT_URL=http://pki.jlab.org/JLabCA.crt
    tty: true
    stdin_open: true
    hostname: client
    container_name: client
    depends_on:
      - zookeeper
      - kafka
      - softioc
      - connect
    environment:
      BOOTSTRAP_SERVERS: "kafka:9092"
      SCHEMA_REGISTRY: "http://registry:8081"
      ALARM_DEFINITIONS: "hello|hello|INJ|RF|/|/"
    entrypoint:
      - /entrypoint/docker-entrypoint.sh
    volumes:
      - ./scripts:/scripts
      - ./examples/client-entrypoint:/entrypoint
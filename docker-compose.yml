---
version: '2'

services:
  softioc:
    image: slominskir/softioc:1.1.0
    tty: true
    stdin_open: true
    hostname: softioc
    container_name: softioc
    ports:
      - "5064:5064/tcp"
      - "5065:5065/tcp"
      - "5064:5064/udp"
      - "5065:5065/udp"
    volumes:
      - ./examples/softioc-db:/db

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "3000:3000"
    environment:
      ZOOKEEPER_CLIENT_PORT: 3000
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:3000'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLED: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    volumes:
      - ./examples/kafka-scripts:/scripts

  registry:
    image: confluentinc/cp-schema-registry:5.5.0
    hostname: registry
    container_name: registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: registry

  connect:
    image: slominskir/epics2kafka:0.2.0
    hostname: connect
    container_name: connect
    depends_on:
      - zookeeper
      - kafka
      - softioc
    ports:
      - 8083:8083
    environment:
      BOOTSTRAP_SERVERS: "kafka:9092"
      CONFIG_STORAGE_TOPIC: connect-configs
      OFFSET_STORAGE_TOPIC: connect-offsets
      STATUS_STORAGE_TOPIC: connect-status
      MONITOR_CHANNELS: "hello:hello:VALUE ALARM"
    volumes:
      - ./examples/connect-config:/config

  client:
    image: python:3.8-alpine
    tty: true
    stdin_open: true
    hostname: client
    container_name: client
    depends_on:
      - zookeeper
      - kafka
      - softioc
      - connect
    entrypoint:
      /bin/sh
    volumes:
      - ./scripts:/scripts